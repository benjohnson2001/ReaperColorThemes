#>----------------------------------- GLOBALS -----------------------------------------

;global_scale 2.0

version 5
tinttcp 0
peaksedges 0

use_pngs 1
use_overlays 0
tcp_showborders 0
mcp_showborders 0
transport_showborders 0
tcp_vupeakwidth 1
mcp_vupeakheight 2
mcp_mastervupeakheight 4
mcp_altmeterpos 0 ; deprecated
tcp_vol_zeroline 85000000
tcp_pan_zeroline 85000000
tcp_width_zeroline 85000000
mcp_vol_zeroline 85000000
mcp_pan_zeroline 85000000 
mcp_width_zeroline 85000000
trans_speed_zeroline 85000000
gen_vol_zeroline FF000000
gen_pan_zeroline FF000000
item_volknobfg FF000000 FF000000 FF000000
tcp_voltext_flags 12
tcp_master_voltext_flags 12
mcp_voltext_flags 13
mcp_master_voltext_flags 13
vertfont_topdown 1
no_meter_reclbl 1
mcp_min_height 199
envcp_min_height 28
tcp_master_minheight 72
tcp_heights 5 28 39 62	 ; supercollapsed, 
collapsed, small(norecarm), recarm size
tcp_folderindent 13

; ----------------- WALTER -------------------
; font #1 - MCP Track Numbers
; font #2 - Extended Mixer
; font #3 - Transport Selection / Rate
; font #4 - Transport BPM / Time 
; font #5 - -
; font #6 - -
; font #7 - tcp.label & recinput
; font #8 - tcp.label & recinput
; -------------------------------------------



set buttonSize [20 20 20 20]


; -----------:: TCP ::---------------


set leftTcpButtonMargin [5 3 0 0]
set rightTcpButtonMargin [5 3 0 0]
set folderMargin [17 0 0 0]

macro setTcpButtonFromLeft element i j
  set element + leftTcpButtonMargin * buttonSize [i j 1 1]
endmacro

macro setTcpButtonFromRight element i j
  set temp + rightTcpButtonMargin * buttonSize [i j 1 1]
  set xMargin - tcp.size{0} + + temp{x} folderMargin{x} buttonSize{w}
  set element [xMargin temp temp temp 1 0 1 0]
endmacro


clear tcp.*
set tcp.size [300 100]


; hide the tcp meter
set tcp.meter [-4 -4 1 1 0 0 0 0]


; top row

  setTcpButtonFromLeft tcp.recarm 0 0

  set tcpLabelWidth - tcp.size{0} + 153 folderMargin{0}

  set tcp.label [26 4 tcpLabelWidth 16 0 0 1 0]
  set tcp.label.margin [0 0 0 0 0.5 0]
  set tcp.label.color [215 215 215]

  setTcpButtonFromRight tcp.solo 0 0
  setTcpButtonFromRight tcp.mute 1 0
  setTcpButtonFromRight tcp.env 2 0
  setTcpButtonFromRight tcp.io 3 0
  setTcpButtonFromRight tcp.fx 4 0
  setTcpButtonFromRight tcp.fxin 5 0

  set folderCompressX - tcp.size{0} 20
  set tcp.foldercomp [folderCompressX 2 18 15 1 0 1 0]


; middle row

  set fxParmWidth * 7 / w 8

  set tcp.fxparm h>105 + leftTcpButtonMargin [5 35 fxParmWidth 26 0 0 0 0] [0]
  set tcp.fxparm.margin [0 0 0 0 0 0]
  set tcp.fxparm.font [-1]
  

; bottom row

  set tcp.volume h>70 [6 59 150 14 0 1 1 1] [0]
  set tcp.volume.color h>70 [215 215 215 0 215 215 215 0] [0]
  set tcp.volume.label h>70 [10 77 250 14 0 1 1 1] [0]
  set tcp.volume.label.color h>70 [215 215 215 0] [0]
  set tcp.volume.label.margin h>70 [0 0 0 0 0 0] [0]
  set tcp.volume.fadermode h>70 [-1] [0]

  set tcp.pan h>70 [172 60 100 12 1 1 1 1] [0]
  set tcp.pan.color h>70 [215 215 215 0 215 215 215 0] [0]
  set tcp.pan.label h>70 [172 77 100 14 1 1 1 1] [0]
  set tcp.pan.label.color h>70 [215 215 215 0] [0]
  set tcp.pan.label.margin h>70 [0 0 0 0 0.5 0.5] [0]
  set tcp.pan.fadermode h>70 [-1] [0]

  set folderX - tcp.size{0} 20
  set folderY - tcp.size{1} 19
;  set tcp.folder h>40 [folderX folderY 18 15 1 1 1 1] [0]
  set tcp.folder folderstate=1 h>40 [folderX folderY 18 15 1 1 1 1] [0] [0]


front tcp.pan.label

set tcp.phase [0]
set tcp.width [0]
set tcp.recinput [0]
set tcp.recmode [0]
set tcp.recmon [0]
set tcp.trackidx [0]
set tcp.fxbyp [0]


Layout "default"
  set tcp.label tcp.label
EndLayout


Layout "label"

  clear tcp.*                     

  set tcp.size [300 100]
  
  
  set tcpLabelMessageY - / h 2 12
  set tcpLabelMessageWidth - w + folderMargin{x} 2
  
  set tcp.label [0 tcpLabelMessageY tcpLabelMessageWidth 20 0 0 0 0]
  set tcp.label.margin [0 0 0 0 0.5 0.5]
  set tcp.label.color [215 215 215 0]


  set folderCompressX - tcp.size{0} 20
  set tcp.foldercomp [folderCompressX 2 18 15 1 0 1 0]

  set folderX - tcp.size{0} 20
  set folderY - tcp.size{1} 19
 ; set tcp.folder h>40 [folderX folderY 18 15 1 1 1 1] [0]
  set tcp.folder folderstate=1 h>40 [folderX folderY 18 15 1 1 1 1] [0] [0]

EndLayout








; -----------:: MASTER TCP ::--------------



set leftMasterTcpButtonMargin [5 4 0 0]
set rightMasterTcpButtonMargin [5 4 0 0]
set folderMargin [17 0 0 0]

macro setMasterTcpButtonFromLeft element i j
  set element + leftMasterTcpButtonMargin * buttonSize [i j 1 1]
endmacro

macro setMasterTcpButtonFromRight element i j
  set temp + rightMasterTcpButtonMargin * buttonSize [i j 1 1]
  set xMargin - master.tcp.size{0} + + temp{x} folderMargin{x} buttonSize{w}
  set element [xMargin temp temp temp 1 0 1 0]
endmacro

clear master.tcp.*
set master.tcp.size [300 100]


; hide the master.tcp meter
set master.tcp.meter [4 4 1 1 0 0 0 0]


; top row

  setMasterTcpButtonFromLeft master.tcp.recarm 0 0

  set master.tcpLabelWidth - master.tcp.size{0} + 153 folderMargin{0}

  set master.tcp.label [26 4 master.tcpLabelWidth 16 0 0 1 0]
  set master.tcp.label.margin [0 0 0 0 0.5 0]
  set master.tcp.label.color [215 215 215]

  setMasterTcpButtonFromRight master.tcp.solo 0 0
  setMasterTcpButtonFromRight master.tcp.mute 1 0
  setMasterTcpButtonFromRight master.tcp.env 2 0
  setMasterTcpButtonFromRight master.tcp.io 3 0
  setMasterTcpButtonFromRight master.tcp.fx 4 0
  setMasterTcpButtonFromRight master.tcp.fxin 5 0


  set monoButtonX - master.tcp.size{0} 155
  set master.tcp.mono [monoButtonX 4 33 20 1 0 1 0]



  set folderCompressX - master.tcp.size{0} 20
  set master.tcp.foldercomp [folderCompressX 2 18 15 1 0 1 0]


; middle row

  set fxParmWidth * 7 / w 8

  set master.tcp.fxparm h>105 + leftMasterTcpButtonMargin [5 35 fxParmWidth 26 0 0 0 0] [0]
  set master.tcp.fxparm.margin [0 0 0 0 0 0]
  set master.tcp.fxparm.font [-1]
  

; bottom row

  set master.tcp.volume h>70 [6 59 150 13 0 1 1 1] [0]
  set master.tcp.volume.color h>70 [215 215 215 0 215 215 215 0] [0]
  set master.tcp.volume.label h>70 [15 77 250 14 0 1 1 1] [0]
  set master.tcp.volume.label.color h>70 [215 215 215 0] [0]
  set master.tcp.volume.label.margin h>70 [0 0 0 0 0 0] [0]
  set master.tcp.volume.fadermode h>70 [-1] [0]

  set master.tcp.pan h>70 [170 59 100 13 1 1 1 1] [0]
  set master.tcp.pan.color h>70 [215 215 215 0 215 215 215 0] [0]
  set master.tcp.pan.label h>70 [170 77 100 14 1 1 1 1] [0]
  set master.tcp.pan.label.color h>70 [215 215 215 0] [0]
  set master.tcp.pan.label.margin h>70 [0 0 0 0 0.5 0.5] [0]
  set master.tcp.pan.fadermode h>70 [-1] [0]

  set folderX - master.tcp.size{0} 20
  set folderY - master.tcp.size{1} 19
  set master.tcp.folder h>40 [folderX folderY 18 15 1 1 1 1] [0]


front master.tcp.pan.label

set master.tcp.phase [0]
set master.tcp.width [0]
set master.tcp.recinput [0]
set master.tcp.recmode [0]
set master.tcp.recmon [0]
set master.tcp.trackidx [0]
set master.tcp.fxbyp [0]




















; -----------:: MCP ::---------------




set mcpMargin [5 6 0 0]
set leftMcpButtonMargin [0 3 0 0]

macro setMcpButtonFromLeft element i j
  set element + mcpMargin + * leftMcpButtonMargin [i j 1 1] * buttonSize [i j 1 1]
endmacro


clear mcp.*

set mcp.size [129 300]


; first row

setMcpButtonFromLeft mcp.recarm 0 0

set mcpLabelWidth - mcp.size{0} + buttonSize{w} + leftMcpButtonMargin{0} 12
set mcp.label [26 7 mcpLabelWidth 15 0 0 1 0]
set mcp.label.margin [0 0 0 0 0.5 0]
set mcp.label.color [215 215 215]


; second row

setMcpButtonFromLeft mcp.fxin 0 1
setMcpButtonFromLeft mcp.fx 1 1
setMcpButtonFromLeft mcp.io 2 1
setMcpButtonFromLeft mcp.env 3 1
setMcpButtonFromLeft mcp.mute 4 1
setMcpButtonFromLeft mcp.solo 5 1


; third row

set mcpPanWidth - mcp.size{0} 12
set mcp.pan [5 60 mcpPanWidth 14]
set mcp.pan.color [215 215 215 0 215 215 215 0]


; fourth row

set mcp.pan.label [5 77 mcpPanWidth 14]
set mcp.pan.label.color [215 215 215 0]
set mcp.pan.label.margin [0 0 0 0 0.5 0.5]
set mcp.pan.fadermode [-1]


; fifth row

set mcpVolHeight / * mcp.size{1} 7 13
set mcp.volume [18 105 22 mcpVolHeight 0 0 0 1]
set mcp.volume.color [215 215 215 0 215 215 215 0]
set mcp.volume.fadermode [-1]


set mcpMeterWidth / mcp.size{0} 2
set mcp.meter [53 105 mcpMeterWidth mcpVolHeight 0 0 0 1]
set mcp.meter.vu.div [2]
set mcp.meter.readout.color [215 215 215]
;set mcp.meter.scale.color.unlit.top h>95 [150 150 150 220 0 0 0 0] [0]
;set mcp.meter.scale.color.unlit.bottom h>95 [120 120 120 220 0 0 0 0] [0]


; sixth row

set mcpVolLabelY - mcp.size{1} 24
set mcpVolLabelWidth - mcp.size{0} 12

set mcp.volume.label [6 mcpVolLabelY mcpVolLabelWidth 14 1 1 1 1]
set mcp.volume.label.color [215 215 215 0]
set mcp.volume.label.margin [0 0 0 0 0.5 0.5]


set mcp.extmixer.mode 					[0]	
	set mcp.fxlist.font 				[2 66]
	set mcp.fxlist.margin 				[5 0 5 0 0.5]
	set mcp.sendlist.font 				[2 16] 
	set mcp.sendlist.margin 			[5 0 5 0 0]
	set mcp.fxparm.font                [2]
	set mcp.fxparm.margin               [2 0 4 0 0]
  
  

Layout "01. Default"
set mcp.label mcp.label
EndLayout

Layout "02. Big Meter"
set mcp.size [120 300]
EndLayout


Layout "03. Separator"

clear mcp.*

set mcp.size [28 300]

set mcp.label [0 52 23 196 0 0 1 1]
set mcp.label.color [215 215 215]
set mcp.extmixer.mode [1]
set mcp.extmixer.position [0]
set mcp.folder 							folderstate<0 [11 278 12 21 0 1 0 1] [0 278 12 21 0 1 0 1]
EndLayout




; -----------:: MASTER MCP ::--------------


clear master.mcp.*
front master.mcp.volume.label
set master.mcp.size 					[108 319]
set master.mcp.menubutton 				[9 5 17 14 0 0 0 0] 
set master.mcp.io 						[0 0 107 24 0 0 0 0]
set master.mcp.mute 					h>220 [7 28 21 20 0 0 0 0] [0]
set master.mcp.solo 					h>220 [32 28 21 20 0 0 0 0] [0]
set master.mcp.env 						h>220 [82 28 20 20 0 0 0 0] [0]
set master.mcp.mono 					h>220 [60 28 20 20 0 0 0 0] [0]
set master.mcp.fx 						h>220 [82 49 20 20 0 0 0 0] [0]
set master.mcp.fxbyp 					h>220 [82 70 20 14 0 0 0 0] [0]
set master.mcp.label 					[8 295 104 19 0 1 0 1] [0]
	set master.mcp.label.margin 		[4 0 4 0 0.5]
	set master.mcp.label.color 			mcp.label.color
;set master.mcp.pan 						[6 48 73 17 0 0 0 0]
set master.mcp.pan 						h>220 trackpanmode=6 [6 66 73 17 0 0 0 0] [6 49 73 17 0 0 0 0] [0]
	set master.mcp.pan.color 			[220 220 220]
	;set master.mcp.pan.label 			[7 68 72 14 0 0 0 0]
	set master.mcp.pan.label 			h>240 trackpanmode=6 [0] [7 69 71 14 0 0 0 0] [0]
	set master.mcp.pan.label.color 		mcp.pan.label.color
	set master.mcp.pan.label.margin 	mcp.pan.label.margin
;set master.mcp.volume 					[7 88 20 186 0 0 0 1]
set master.mcp.volume 					h>240 [7 86 20 186 0 0 0 1] h>220 [7 86 20 203 0 0 0 1] h>111 [7 28 20 261 0 0 0 1] [0]
	;set master.mcp.volume.label 		[7 276 93 14 0 1 0 1]
	set master.mcp.volume.label 		h>240 [7 276 93 14 0 1 0 1] h>220 trackpanmode=6 [0] [7 69 71 14 0 0 0 0] [0]
	set master.mcp.volume.label.color 	mcp.volume.label.color
	set master.mcp.volume.label.margin 	[0 0 0 0 0.5]
;set master.mcp.meter 					[32 88 63 180 0 0 0 1]
set master.mcp.meter h>240 				[32 91 63 177 0 0 0 1] h>220 [32 91 63 194 0 0 0 1] h>111 [32 33 63 252 0 0 0 1] [0]
	set master.mcp.meter.vu.div 		[2]
	set master.mcp.meter.vu.rmsdiv 		[6]
	set master.mcp.meter.readout.color 	h>95 [220 220 220 220 220 220 220 220] [0]
	set master.mcp.meter.scale.color.unlit.top h>95 [150 150 150 220 0 0 0 0] [0]
	set master.mcp.meter.scale.color.unlit.bottom h>95 [120 120 120 220 0 0 0 0] [0]
set master.mcp.extmixer.mode 			[0]	
	set master.mcp.fxlist.font 			[2 16]
	set master.mcp.fxlist.margin 		[4 0 4 0 0.5]
	set master.mcp.sendlist.font 		[2 16] 
	set master.mcp.sendlist.margin 		[5 0 5 0 0]
	;set master.mcp.fxparm.font         [2 28]
	set master.mcp.fxparm.margin        [2 0 4 0 0]




; -----------:: ENVELOPE ::--------------


set envMargin [18 0 0 0]
set leftEnvButtonMargin [0 3 0 0]
set rightEnvButtonMargin [2 3 0 0]

macro setEnvButtonFromLeft element i j
  set element + envMargin + leftEnvButtonMargin * buttonSize [i j 1 1]
endmacro

macro setEnvButtonFromRight element i j
  set temp + rightEnvButtonMargin * buttonSize [i j 1 1]
  set xMargin - envcp.size{0} + temp{x} buttonSize{w}
  set element [xMargin temp temp temp 1 0 1 0]
endmacro

macro setFxEnvButtonFromRight element i j
  set temp + rightEnvButtonMargin * buttonSize [i j 1 1]
  set xMargin - envcp.size{0} + temp{x} buttonSize{w}
  set element envcp_type=4 [xMargin temp temp temp 1 0 1 0] [0]
endmacro


clear envcp.*
set envcp.size [300 100]

setEnvButtonFromLeft envcp.arm 0 0

set envLabelWidth - tcp.size{0} 125
set envLabelX + + envMargin rightEnvButtonMargin * buttonSize + [1 1 1 1] [i j 1 1]

set envcp.label [envLabelX 4 envLabelWidth 16 0 0 1 0]
set envcp.label.margin [0 0 0 0 0.5 0]
set envcp.label.color [215 215 215]

setEnvButtonFromRight envcp.hide 0 0
setEnvButtonFromRight envcp.bypass 1 0

setFxEnvButtonFromRight envcp.learn 2 0
setFxEnvButtonFromRight envcp.mod 3 0

set envcp.label.color [215 215 215]
set envcp.value.color [215 215 215]
set envcp.fader.color [0 0 0 0 0 0 0 0]


set envFaderX - envLabelX 20
set envFaderWidth / * envcp.size{0} 2 3

set envcp.fader h>60 [envFaderX 72 envFaderWidth 12 0 1 1 1] [0]
set envcp.fader.color [0 0 0 0 0 0 0 0]


set envLabelX - envcp.size{0} 80
set envLabelY - envcp.size{1} 30
set envLabelWidth / * envcp.size{0} 1 4

set envcp.value h>60 [envLabelX envLabelY envLabelWidth 14 1 1 1 1] [0]
set envcp.value.color h>60 [215 215 215 0] [0]
set envcp.value.margin h>60 [0 0 0 0 0.5 0.5] [0]
set envcp.fader.fadermode [-1]










; -----------:: TRANSPORT ::-------------


clear trans.*

set leftTransportMargin [8 0 0 0]
set topTransportMargin [0 12 0 0]
set innerTransportButtonMargin [2 0 0 0]
set transportButtonSize [35 33 35 33]

macro setTransportButtonFromLeft element i j
  set element + + leftTransportMargin topTransportMargin * + innerTransportButtonMargin transportButtonSize [i j 1 1]
endmacro

macro doThis
; size
  set trans.size [1400 43]
  set trans.size.minmax [100 43 4000 4000]
  set trans.size.dockedheight [43]
  
; transport buttons
  setTransportButtonFromLeft trans.rew 0 0
  setTransportButtonFromLeft trans.stop 1 0
  setTransportButtonFromLeft trans.play 2 0
  setTransportButtonFromLeft trans.pause 3 0
  setTransportButtonFromLeft trans.fwd 4 0
  setTransportButtonFromLeft trans.rec 5 0
  setTransportButtonFromLeft trans.repeat 6 0


; playrate

  set transportPlayRateX * + innerTransportButtonMargin transportButtonSize [7.5]
  set trans.rate ?trans_flags&2 [transportPlayRateX 8 84 34 0 0 0 0] [0]

  set trans.rate.margin [8 0 8 0 0]
  set trans.rate.fader [0]


; status

  set transportStatusX * 2.75 / trans.size{x} 10
  set trans.status [transportStatusX 6 350 30 0 0 0 0]

; bpm

  set transportBpmX * 6 / trans.size{x} 10

  set trans.bpm.tap [transportBpmX 6 45 17]
  set trans.bpm.tap.font [4]
  set trans.bpm.tap.margin [3 2 2 0 0.5]
  
  set trans.bpm.edit [transportBpmX 6 45 34]
  set trans.bpm.edit.font [4]
  set trans.bpm.edit.margin [1 13 0 0 0.5]
  
  front trans.bpm.tap
  
  
; time signature

  set transportTimeSignatureX * 6.5 / trans.size{x} 10
  set trans.curtimesig ?trans_flags&4 [transportTimeSignatureX 4 40 34] [0]
  set trans.curtimesig.font [3]
  set trans.curtimesig.margin [0 0 0 0 0.5]


; selection

  set transportSelectionX * 8 / trans.size{x} 10
  set trans.sel  [transportSelectionX 4 300 40]
  set trans.sel.font [3]
  set trans.sel.color [175 175 175]
  set trans.sel.margin [8 0 8 0 0]
endMacro

doThis
